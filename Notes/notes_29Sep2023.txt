Day 24: (29-Sep-2023)
------------------------------
Jenkins
Continues Integration and Continues Development

We dont need to install anything for jenkins.
We just need to download jenkins war file from jenkins portal.
thats all.

Why we need Jenkins? What is Continuous Integration and Continuous Development?
	shortly called as CI/CD

CI/CD is very popular approach.

What is CI/CD?

Scenario:
	Suppose, you (Skanda) develop a project.
	Nitin is the deployer. He has AWS a/c credentials and so he only can deploy the project in AWS
	
	After sometime, Skanda do some changes to the project.
	How does that change reflect in AWS server?
		Nitin has to re-deploy the project.

	This process is complicated.
This is where, CI/CD helps us.

Solution:
------------
	If Skanda push the project to git hub (or any such platform)
	And Nitin deploy the application from git hub (or any such platform)
	Then, Nitin has created a pipeline for git in aws.

	Whenever Skanda push the changes to git. Then the changes are captured by the CI/CD pipeline from git. Git notifies as push notification.

	Problem solved.

we learn AWS later.
we learn Git later.

But we can orchestrate this process in Jenkins now.
First of all, how to run a java program using Jenkins. You can learn now.
I can push projects to git and give you the link. You can proceed with practicals now.

During training room session, we will install git and proceed.

Lab setup for Jenkins:
1) download jenkins war file from 
	https://www.jenkins.io/download/

2) keep the war file in c:\softwares\jenkins\ 

3) How to run jenkins in our system?
	go to the folder where jenkins war file is present
	cmd
		
we are in cmd prompt where jenkins war is present.
4)
	java -jar jenkins.war



delete the new war from downloads folder and softwares folder
now, download old version that support java 8 from:
https://get.jenkins.io/war-stable/2.164.1/


Jenkins is fully up and running

check localhost:8080

Steps for jenkins:
1) download jenkins war file.
	ensure that the version supports java 8
	https://get.jenkins.io/war-stable/
		the above url, shows the list of jenkins versions and their support to jdk
2) copy the jenkins war file to softwares folder
3) go to cmd prompt where this war file is present
4) java -jar jenkins.war
5) when you see "Jenkins is fully up and running"
	go to browser
		http://localhost:8080
6) Login to jenkins as admin:
	admin
	admin
7) inform me once you successfully logged in to jenkins

-----------------------
Solution for "Java is not recognized" problem:

1) copy the location of your jdk
	c:\program files\amazon corretto\jdk 1.8\bin

2) copy the location and append this to the path env variable.

open a new cmd prompt and check
	java -version
---------------------
Now, you are able to see the dashboard.
Lets run a java program in jenkins:

1) create a java program
	Hello.java

public class Hello
{
	public static void main(String []args)
	{	
		System.out.println("Hello this is empower batch");
	}
}

2) in jenkins dashboard, create a new item
name of the item:	empower-1
freestyle project
click ok

Before build:
	copy the Hello.java file to 
	C:\Users\rjaga\.jenkins\workspace\empower-3
		in your case, profile name is 6 digit
Build step:
	execute windows batch command

save
build now
check the builds and console.

---------------------


	java -jar jenkins.war --enable-future-java



Activity:
create a git repository and push a spring boot project to the git.
pom.xml is present in the home

create a jenkins project and the build command 
windows batch
	mvn spring-boot:run

--------------------------
Language features
datatypes
programming constructs

----------------------------------------
Using Jenkins, you should be able to run a java project/ program
you should be able to deploy the java program, or
spring boot application
and build the app in jenkins.
the changes pushed to git must reflect in subsequent build in jenkins.

-----------------------------------------------
HTML
	Learning html is very import for creating web applications.
	Hypertext Markup Language
HTML is very simple markup language have a huge set of vocabulary.
	Predefined tags that we need to learn.

a html file must contain a root element called <html>

Elements		also called as Tags
Attributes		additional values for an element
Entities		used whenever markup syntax is confusing
Comments	provide explanation of the code
Directives		used in server side scripts
Scripts		compute, calculate, validate and produce output of expressions

<HTML>		is the root element of a html program
<BODY> and <HEAD> are the two child tags of HTML tag

<HEAD>		contains the program that must be loaded in memory even before the page is rendered (displayed)
		SCRIPTS that my be loaded early\

BODY		contains the code mostly that is displayed in the browser

HTML 		means, presentation. How the data must be displayed?
		list
		table
		columns
		center/	left/	right/	justify?
		bold?		italic	underlined
		Heading size from 1 to 6		1 being largest
		color?		background-color?
		
Front End
UI
View

Presentation

1) Block Elements
2) In-line Elements

<div>This is a block</div>
<div>This is another block</div>
	div always presents the data in a separate line.

you might have seen multiple divs in same row in bootstrap.


<span>1</span>
<span>2</span>
both are displayed in same line

<p>this paragraph is <div>displayed</div> in same line</p>
	NO, the div will appear in separate line

<p>this paragraph is <span>displayed</span> in same line</p>
	YES, the span appear in same line

P
DIV
TABLE
H1...H6
these are block elements they appear in separate line.


We use visual studio code to practise html programs.

Tags must nest properly.
	<p><b><i>this is a paragraph</i></b></p>

Tags are case insensitive.		UPPER or lower or MiXeD case also fine
	(xml is case sensitive. HTML is not)

attributes are provided in double quotes.

<p align="center">This is a paragraph</p>
	align is the attribute of p element.	value may be number, but must be in 	double quotes

	this rule is not implemented strictly. but follow this.

Entities:
	&nbsp;
	&gt;
	&ge;
	&lt;
	&le;
	&eq;
	&ne;

<p>i<10</p>		this is confusing?
<p>i&lt;10</p>		&lt; is 	< symbol

<c:if test="p.age &gt; 0">


Comments:
	<!--	this is a comment 	-->

Some elements are 
	empty tags
Some elements are 
	body tags

<br/>		is an empty element.
also
<hr/>		print a horizontal line
	empty tags use / at the end.		this rule is not followed much.



<b>this is printed in bold</b>
		this is body tag	/ content element
		they has start tag and end tag

In ReactJs, these rules must be followed strictly.

<table>
	<thead>
		<tr>	(nobody is using. in react, you get warning)
			<th>S.No.</th>
		</tr>
	</thead>
</table>

-------------------------------
Heading elements
Table elements
Form elements
	INPUT elements		HTML5 	many type of input elements

-------------------------------------------------------------------
<%@page
<%@taglib
<!DOCTYPE html>		implies this is a HTML 5 page






Fundamentals
Operators
Control Flow
Loops
Functions
Lists
Strings