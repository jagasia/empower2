Day 21: (26-Sep-2023)
------------------------------
C programming:
	control statements, arrays, strings
-------------------------------------------------------------
if
if-else
if-else if-else
switch case
while
do-while
for-loop
----------------------------
arrays
	sizing the arrays are done while declaring itself

	int arr[10];		we have declared an array and sized it there itself
	in old version, the size must be constant.

	but in new versions, we are allowed to provide variable as size


Demo:
Profit Share
Ramu, Gopu and Samu are three friends who own a fruit shop. All three have invested certain amount for starting the shop. They share the profit proportionate to the ratio of the shares they have invested. Given the Profit amount and the ratio of shares of Ramu,Gopu and Samu ,write a program to find the amount of profit that will go to Ramu, Gopu and Samu.

Input Format:
First line is an integer that denotes the Profit Amount.
Second line consists of 3 Space separated integers that denote the ratio values of Ramu,Gopu,Samu respectively

Output Format:
A double value that denotes the Ramu's profit amount.
A double value that denotes the  Gopu's profit amount.
A double value that denotes the  Samu's profit amount.
[Note : The output values are rounded off to 2 decimal places]

Sample Input 1:
10000
2 4 4

Sample Output 1:
2000.00
4000.00
4000.00

Sample Input 2:
25000
4 5 6

Sample Output 2:
6666.67
8333.33
10000.00 
-------------------------
Solution:

/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>

int main()
{
    int profit,ramu,gopu,samu;
    scanf("%d",&profit);
    scanf("%d",&ramu);
    scanf("%d",&gopu);
    scanf("%d",&samu);
    
    double r,g,s;
    
    int total=ramu+gopu+samu;
    double x=(double)profit/total;
    
    r=ramu*x;
    g=gopu*x;
    s=samu*x;
    
    
    printf("%.2f\n",r);
    printf("%.2f\n",g);
    printf("%.2f\n",s);

}

---------------------------------------------------------
House for Sale
Ramu has bought a house for X rupees, and he has planned to sell it after n years. He knows the rate at which the house value changes each year, for n years. He is very eager to know the value of his house after n years. 
Write a    progam to help Ramu know the value of his house after n years.

Note: The value of the house can increase as well as decrease.

Input Format:
First line of the input is an integer that corresponds the value X.
Second line of the input is the number of years, n.
Third line consists of n space separated integers that correspond to the rates at which the house value changes every year.

Output Format:
Output is a double value that coresponds to the value of Ramu's House after n years.(rounded off to 2 decimal places).

Sample Input 1:
150000
3
10 12 -10
Sample Output 1:
166320.00 

Explanation:
Cost of house 150000
Value of house increaes 10 % in first year = 150000.00 + 15000.00 = 165000.00
Value of house increaes 12 % in second year = 165000.00 +19800.00 = 184800.00
Value of house decreases 10 % in third year = 184800.00 - 18480.00 = 166320.00

After the third year the house value is 166320.00 . 

Sample Input 2:
10000
3
1 2 3
Sample Output 1:
10611.06 


7:41
complete this challenge by 7:51
--------------------------------------------
Solution:
/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>

int main()
{
    int x=0;
    scanf("%d",&x);
    int n=0;
    scanf("%d",&n);
    int arr[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    
    //calculation
    double output=x;
    for(int i=0;i<n;i++)
    {
        // printf("%.2f",output);
        // printf(".......");
        output+=((double)arr[i]/100*output);
    }
    
    printf("%.2f",output);

}

-----------------------------------------------------------
Challenge:
Number Addition
 Gopu is a third grade kid, and new to numbers and the operations performed on it. Parallel to that he learns computer programming. So instead of storing a number in an integer variable, A, he created an array and stored the digits in that array. Now, if a second number, X, is given (as a single integer), he needs to calculate the sum.
Write a program to help Gopu in finding the sum and print the resultant value.

Input format:
First line of the input is an integer that denotes the number of digits, n, in the first number, A.
Second line of the input consists of space separated integers(single digit each), which corresponds to the n digits of the first number, A.
Third line of the input is an integer that denotes the  second number, X.

Note: The maximum value of 'n', i.e., the number of digits in A is 100.

Output format:
Space separated digits of the resultant number.

Sample Input 1:
5
1 2 3 4 5
1
Sample Output 1:
1 2 3 4 6


Sample Input 2:
4
2 3 8 9
11
Sample Output 2:
2 4 0 0 

------------------------------Challenge ends at 08:30
how to convert an array of integers to a single integer

1 2 3 4 5 
1
2
1+2	=	12
1*10+2	=	12
12+3	=	123
12*10+3	=	123

--------------------------------
Solution:
#include <stdio.h>
#include <math.h>

int main()
{
    int n=0;
    scanf("%d",&n);
    int arr[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    int x=0;
    scanf("%d",&x);
    
    int num=0;
    for(int i=n-1,j=0;i>=0;i--,j++)
    {
        int digit=arr[i];
        num+=pow(10,j)*digit;
        
    }
    // printf("%d\n",num);
    num+=x;
    printf("%d",num);
}
---------------------------------------------
String in c language:
	if we do not use any library like 		string.h
	then a string in c language is a char array.

char arr[10];		//this is a character array.
	
If you want to store 10 characters in a char array, then 
char arr[11];		//last position is provided for a null  terminator

	'\0'



c language provides more functions to capture string inputs

the following functions are used to capture character inputs:
getc		
getchar
getch

the following function is for string:
gets

Activity:
Identify the use of
getc
getch
getchar
gets

puts
putc
--------------------------------------------------

int main()
{
    char input='\0';
    int n=0;
    scanf("%d",&n);
    char arr[n];
    for(int i=0;i<n;i++)
    {
        arr[i]=getc(stdin);
    }
    //
    for(int i=0;i<n;i++)
    {
        printf("%c\n",arr[i]);
    }
    return 0;
}



8
a
a
b
c
n
s
d
n
----------------------------------------------------
Last Character

Rahul was tired after studying for so long , so he thought to play a small game with the words from his book . He opens a random page and selects a random word from it , and also  chooses the last digit of that page number n . Given an array of characters,Write a program to help Rahul find the last character that occurs n(last digit of the page number) times in the array . If no such character exists,then print -1.

Input Format:
First input is an integer that denotes the size of the array.
Second line consists of  series of characters  seperated by a space that denotes the array values.
Third input is an integer that denotes the n value.

Output Format:
Output is a character that denotes the last character which occurs n times.

Sample Input 1:
8
a a b c n s d n
2

Sample Output 1:
n

Explanation:
    In the given array 'a' and 'n' occurs 2 times which is equal to the n value . Even though 'a' occurs twice ,'n' is the one that occurs last.    
    
Sample Input 2:
5
a b c d e
3

Sample Output 2:
-1 


--------------
Solution:
#include <stdio.h>

int main()
{
    char input='\0';
    int n=0;
    scanf("%d",&n);
    getc(stdin);
    char arr[n];
    for(int i=0;i<n;i++)
    {
        do{
            scanf("%c",&arr[i]);
        }while(arr[i]==10);
    }
    int x=0;
    scanf("%d",&x);

    char result='\0';
    for(int i=0;i<n-1;i++)
    {
        int count=1;
        for(int j=i+1;j<n;j++)
        {
            // printf("Comparing %c with %c\n",arr[i],arr[j]);
            if(arr[i]==arr[j])
            {
                count++;
            }
        }
        if(count==x)
        {
            result=arr[i];
        }
    }
    printf("Result.....................\n");
    if(result=='\0')
        printf("-1");
    else{
        printf("%c",result);
    }
    return 0;
}
-----------------------
Challenge:
Java_PF_6.docx

Historical Era

Mohan came across many ancient people while reading a book . He was curious to know at what era they all would have lived .  Given a year(X) as input , Write a program to help Mohan find which century they belong to and categorize them into one of the following periods : " Prehistorical period " , " Vedic Period " , "Second Urbanisation " , " Early Modern Period " , " Modern Period " .

Note:
Prehistorical period       -    0-2nd
Vedic Period                      -    3rd-6th
Second Urbanisation    -    7th-13th
Early Modern Period      -    14th-18th
Modern Period                  -    19th-present

Input format:
First input is an integer that denotes the year value X.

Output format:
First line of output is an integer that denotes the century value.
Second line consists of a string that denotes the Prehistorical period/Vedic Period/Second Urbanisation/Early Modern Period/Modern Period.

Sample Input 1:
1222

Sample Output 1:
13
Second Urbanisation

Sample Input 1:
1947

Sample Output 1:
20
Modern Period 
-------------------------Solution
#include <stdio.h>

int main()
{
    int year=0;
    scanf("%d",&year);
    
    int century=year/100+1;
    char *period;
    
    printf("%d\n",century);
    
    if(century<=2)
    {
        //0-2nd
        strcpy(period,"Prehistorical period");
    }else if(century<=6)
    {
        strcpy(period,"Vedic Period");
    }else if(century<=13)
    {
        strcpy(period,"Second Urbanisation");
    }else if(century<=18)
    {
        strcpy(period,"Early Modern Period");
    }else
    {
        strcpy(period,"Modern Period");
    }
    printf("%s",period);
    return 0;
}
--------------------------------------------------------
Challenge:
N-smallest Elements

Shreya was attending a coding competition and she was progressing good . Suddenly she got stuck in a problem where she needs to find the n-smallest elements in an array . Given an array of integers of size N and n value as inputs , Write a program to help Shreya find the first - n smallest elements from the array but they must be in the same order as they are in given array.

Input Format :
First input is an integer that denotes the size of the array, N.
Second line consists of series of integers seperated by a space that denotes the array values.
Third input is an integer that denotes the n value.

Output Format:
Output is a series of integers seperated by a space that denotes the n smallest elements.

Sample Input 1:
5
4 8 2 5 9
3

Sample Output 1:
4 2 5

Sample Input 2:
10
7 3 8 11 55 22 1 6 13 2
5

Sample Output 2:
7 3 1 6 2 



5
4
8
2
5
9
3

----------------------------------------
functions 
	int sum(int i, int j)
pointers
	are variable that can contain the reference of other variables
	pointers of a type, can refer to variables of same type

#include <stdio.h>

int main() {
    int age=20;
    int *ptr=&age;	
    *ptr=100;
    printf("%d",age);
    return 0;
}


* symbol is used to declare a pointer.
int *ptr;	//here, * means, we are declaring a pointer.		* 	=	indirection
ptr=&age;	//here, we do not use *	but & is used as "address of" operator



*ptr=100;	//here, * means, value of....	100 is not stored in ptr.	100 is stored in a variable, which ptr refers to.
we have actually changed the value of age variable.

there are no 2 variables of type int.
ptr is not a variable of type int. it is a variable that can hold the reference of int variable.


#include <stdio.h>

int main() {
    int arr[3][3]={
        {88,5,72},
        {511,252,335},
        {1,24,98}
    };
    printf("%d",*(*(arr+1)));
    return 0;
}

arr[10]
arr is the pointer to the first element of the array

arr[10][10]
*arr is the pointer to the first row first element

+1 will move to next element of first row

*(arr+1)	second row

if you want value of an element in 2 dimensional array, 2 asterisk is required


int arr[10]
arr is the name of the array, it refers to the address of first element.
all other elements are accessed using index

arr[0]	=	move 0 unit from first element
arr[1]	=	move 1 unit from first element

Write a swap function that accepts 2 integers and swap them.
Do it in c language


you can use pointers


#include <stdio.h>

void swap(int *i, int *j)//i and j are formal parameters
{
    int temp=*i;
    *i=*j;
    *j=temp;
    printf("Inside swap function: i=%d and j=%d\n",*i,*j);
}

int main() {
    int x=20;
    int y=30;
    swap(&x,&y);  //x and y are actual parameters
    printf("But in main function: x=%d and y=%d\n",x,y);
    return 0;
}

--------------------------------------
Full Prime

Siva always try to play with the numbers , he does so because he thinks that it will lead to some special numbers . One day he came up with an idea to know the numbers that are considered as Full Prime .  Full prime is a prime number where each of its digits is also a prime . Given a range from X to Y ,write a program to help Siva find the numbers (excluding X and Y ) that are full primes . If no such numbers exist between the given range,then print -1.

Note1: Mention the maximum range of number will vary from 1 to 1000.

Note2: 1 is not a prime number. 


Input Format:
First Input is an integer that denotes the X value.
Second Input is an integer that denotes the Y value.

Output Format:
Output is a series of integers separated by a comma that is considered as a full prime.

Sample Input 1:
1
50

Sample Output 1:
2,3,5,7,23,37

Sample Input 2:
8
10

Sample Output 2:
-1 

Hint:	for test case 1 as example
	you should create loop from 1 and 50
	create a separate function that checks if the given number is a prime number or not.
	isPrime(2)
	isPrime(3)
	isPrime(4)
	.....
	isPrime(50)

if yes, then split the number into digits
	check each digit is prime or not using the same isPrime function.



18
2
3
4
5
6
7
8
9
10
11
12


to get each digit of a number
if we modulo a number by 10, we get its last digit
if we divide that number by 10, we remove that last digit
----------------------
Solution:
#include <stdio.h>

int isPrime(int num)
{
    if(num<=1)
        return 0;
    for(int i=2;i<=num/2;i++)
    {
        if(num%i==0)
            return 0;
    }
    return 1;
}

int main() {
    int start, end;
    scanf("%d",&start);
    scanf("%d",&end);
    int count=0;
    int isFirst=1;
    for(int i=start;i<=end;i++)
    {
        if(isPrime(i))
        {
            //work on each digit of i
            int temp=i;
            int flag=1;
            // printf("when i = %d\n------------\n",i);
            if(i<10)
            {
                if(!isFirst)
                    printf(",");
                printf("%d",i);
                isFirst=0;
                continue;
            }
            while(temp>0)
            {
                int digit=temp%10;
                // printf("Checking digit: %d\n",digit);
                if(!isPrime(digit))
                {
                    flag=0;
                    break;
                }
                temp/=10;
            }
            if(flag)
            {
                count++;
                if(isFirst==0)
                {
                    printf(",");
                }

               printf("%d",i);
               isFirst=0;
            }
         
        }
       
    }
     if(count==0)
            printf("-1");
    return 0;
}
--------------------------------------------
