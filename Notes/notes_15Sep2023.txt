Day 15:
Java Servlets
-----------------
Java code can be 
	Scriplet
	Servlet
	MIDlet
	
Server side programming in java is called as Servlet
JSP and Servlet
	both are web components created using Java Enterprise Edition

What is a servlet?
	it is a class derived from HttpServlet
	HttpServlet is derived from GenericServlet

	if you write java program and embed html code inside it, it is Servlet
	if you write html code and embed java code inside it, it is JSP

html code is static
	so in order to respond to user actions, we need dynamic aspect, ie., scripting.

scripting is 2 types:
	client side
	server side

client side:
	javascript, vbscript etc are scripts that are executed at client's browser.

server side:
	ASP, JSP, PHP, Servlet
	are server side scripts that runs in server and the output is sent to browser.

	For accessing server side resources like database, we need server side scripting.

Hello world program in servlet:
1) File -> New -> Project
	Dynamic Web Project			Eclipse for Java Enterprise / EE developers

	Target runtime:	<none>
		we can add target runtime
		choose Apache Tomcat 9.0.37	folder that contains bin/lib
	
2) create a servlet
	right click projecgt -> New -> Servlet
	package name:		view
	class name:		MyServlet

3) Run as "Run on server"		
4) Error:		Port 8080 required by Tomcat v9.0 Server at localhost is already in use. The server may already be running in another process, or a system process may be using the port. To start this server you will need to stop the other process or change the port number(s).

we can change the port in which our server should run.
	in "servers" tab,	(window -> Show view -> servers)
	double click the server.
		change the port number

Run

change the default browser.
-----------------------
Servlet can get input using "request" object
Servlet can give output using "response" object


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		PrintWriter out = response.getWriter();
		out.print("Hello this is empower best batch");
	}

-------------------------------------------
Create a servlet program to add 2 numbers


<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<form action="MyServlet">
Number 1: <input type="number" name="no1" /><br/>
Number 2: <input type="number" name="no2" /><br/>
<input type="submit" value="Add" />
</form>
</body>
</html>


package view;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class MyServlet
 */
@WebServlet("/MyServlet")		//web module 3.0 onwards	so web.xml was not 				//required
public class MyServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public MyServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String str1=request.getParameter("no1");
		String str2=request.getParameter("no2");
		
		PrintWriter out = response.getWriter();
		int no1=Integer.parseInt(str1);
		int no2=Integer.parseInt(str2);
		out.print("Sum of "+no1+" and "+no2+"="+(no1+no2));
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}


----------------------------
Activity:
	Create a dynamic web project.
	JSP filename:	login.jsp
		Username:
		Password
			Login button

	Servlet should validate the login.
	if usename is equal to password, then login is "Failure". Else "Success".

	Display appropriate message.


<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<form action="LoginServlet">
	Username:<input type="text" name="username" /><br/>
	Password:<Input type="text" name="password" /><br/>
	<input type="submit" value="Login" />
</form>
</body>
</html>



package controller;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class LoginServlet
 */
@WebServlet("/LoginServlet")
public class LoginServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public LoginServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String username=request.getParameter("username");
		String password=request.getParameter("password");
		PrintWriter out = response.getWriter();
		if(username.equals(password))
		{
			out.print("Login Failed");
		}else
		{
			out.println("Login Successful");
		}
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}


---------------------------

doGet:
	http://localhost:8081/15-sep-servlet-1/LoginServlet?username=jag&password=india
doPost:
	http://localhost:8081/15-sep-servlet-1/LoginServlet




http://localhost:8081/15-sep-servlet-1/MyServlet?no1=2&no2=3
URL Re-writing


HTTP Method:
	GET
	POST
	PUT
	DELETE
	PATCH

----------------------------------------------------
You have create login validation with dummy validation	equals 
we have to use database validation
	USER_MASTER table
		USERNAME	PASSWORD	FIRST_NAME	

1) Convert this dynamic web project into a maven project
	right click project -> Configure -> Conver to Maven Project
	group id:	com.empower.demo
	artifact id:	user-module
2) run the project
---------------------------------------
Late comers after break:
	Ramyashree
-------------------------------------------------
Spring framework
	Servlet & JSP 	(dynamic web project) is temporary
	after servlet & jsp will come back to Spring again. (maven project)
	spring boot	(we will download project from spring initializr)

	
-------------------
Lets create a dynamic web project of module version less than 3
	web.xml
		deployment descriptor

In new web module projects, ie., version 3.0 or 4.0 also, we can add a web.xml in 2 ways:
	1) while creating project, next -> next-> tick the option to generate dep des xml file
	2) after creating project, right click project -> Java EE tools -> Generate dep des stub

web.xml
	<servlet>
		<servlet-name>MyServlet</servlet-name>
		    <servlet-class>view.MyServlet</servlet-class>		
	</servlet>
  <servlet-mapping>
    <servlet-name>MyServlet</servlet-name>
    <url-pattern>/MyServlet</url-pattern>
  </servlet-mapping>
    <servlet-mapping>
    <servlet-name>MyServlet</servlet-name>
    <url-pattern>/ms</url-pattern>
  </servlet-mapping>

----------------------------------
JSP
	Java Server Pages
	is translated to a servlet at runtime

	Scriplets
	Expressions
	Declarations
	Expression Language
	Directives
	Action tags

Scriplet:
	<%		%>

Expression:
	<%=		%>

	is translated into 
		out.print		in servlet

Declarations:
	<%!		%>

Directives:
	<%@		%>

	page
	taglib
	include

------------------------------------------------
CRUD 
	we have done  CRUD in CUI. How it will be if we do it in GUI?
	JSP & Servlet.
	Tell me one entity name	
		PRODUCT
			ID
			NAME
			PRICE

1) Create a dynamic web project		product-project
2) Add jar files to the dynamic web project
	copy jar files to lib folder		WebContent/WEB-INF/lib
3) Create entity class	Product.java
4) Create DAO	ProductDaoImpl.java
5) product.jsp
6) ProductServlet
	



for writing for loop in jsp,
	we can use JSTL core

JSTL	JSP Standard Tag Library
-----------------------------------------
