Day 17: (20-Sep-2023)
-----------------------------
Spring Boot(RESTFul Service, POSTMAN, â€¦), Maven Tool

Spring Boot:
------------------
	Spring boot is convention over configuration. If you follow the convention, you do not 		need configuration.
	Auto-Configuration
	Standalone
	Starter dependencies
	CLI		Command Line Interface
		without any IDE, we can completely do a project using notepad and cmd

Demo:
	create a hello world program in spring boot.

https://start.spring.io/

it will take us to spring initializr

Project: Maven
Language: Java
Spring boot version: 2.7.15
group id: com.empower.ecom
artifact: first-boot
packaging: 	war 	(for mvc) 	and jar for restful webservices
java version:	8
dependencies:
	Spring Web

click the generate button to download the zip
unzip to your workspace folder

How to import?
File -> Import -> 		Existing maven projects
				choose the location where pom.xml is present
allow the download process to complete.

version issues:
	right click project-> properties
		java build path		check jdk version
		java compiler
		project facets


open the Application.java	(where main method is present)
	if project name is "first-boot" then application class name is FirstBootApplication

System.out.println("Hello world");

Run the project as "Java Application"

If port number 8080 is in use, we can change it:	in configuration file
	application.properties:		(under src/main/resources)

		server.port=8081

Important things to follow:
1) Application class	(ex:	FirstBootApplication)
	this class is present in a package. That package is the base package.
	All other classes and interfaces must be present inside the base package (or its sub 	package)


com.empower.ecom
com.empower.ecom.model
com.empower.ecom.controller
com.empower.ecom.config

all the above are under com.empower.ecom package only
com.empower.model		NOT ALLOWED
com.empower.controller	NOT ALLOWED

application.properties is our configuration file. We can have many configuration classes in addition to this.

-------------------------------------------------------------
Spring Boot MVC
1) Create spring boot project using spring initializr

Project:	Maven
Language:	Java
Spring Boot:	2.7.15
Group:	com.empower.ecom
Artifact:	20-sep-mvc
Packaging:	war
java:	8
Dependencies: web

Upto Hello world, it is done.

2) under webapp folder, create "WEB-INF/views" folder
3) inside views folder, create index.jsp
4) index.jsp		hello world
5) application.properties	(this file is present under src/main/resources folder)
server.port=8080
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

6) create the controller class.	Remember it must be inside base package or its sub package
package com.empower.ecom.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;

@Controller
public class MyController {
	@GetMapping
	public String home()
	{
		return "index";
	}
}

7) Error:
"Path with "WEB-INF" or "META-INF": [WEB-INF/views/index.jsp]"

	solution:
		in pom.xml add a dependency:
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
		</dependency>
8) Stop and Run the application
	localhost:8080

