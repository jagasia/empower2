Day 29: (09-Oct-2023)
------------------------------
auto refresh
	window.location.reload(false);
React
	styling
	hooks
	redux

Conditional Styling
----------------------------
class vs className
className allows us to use expressions

style={backgroundColor}


    render(){
        const x='form-control'
        const y='is-invalid'
        const color=this.state.name
        return <div style={{backgroundColor:'white'}}>
            Id:<input type="number" name="id" className={x} onChange={(event)=>this.setState({[event.target.name]:event.target.value})} />
            
            Name:<input type="text" name="name" className={this.state.name.length<5?'form-control is-invalid':'form-control'} onChange={(event)=>this.setState({[event.target.name]:event.target.value})} />
            {this.state.name.length<5 && <span className="text-danger">Name must be atleast 5 characters</span>}<br/>
            Price:<input type="number" name="price" className={(this.state.price<100)?'form-control is-invalid':'form-control'} onChange={(event)=>this.setState({[event.target.name]:event.target.value})} />
            <br/>
            <input type="button" value="Add" className="btn btn-info" onClick={this.fnAdd} />&nbsp;
            <input type="button" value="Update" className="btn btn-warning" onClick={this.fnUpdate} />&nbsp;
            <input type="button" value="Delete" className="btn btn-danger" onClick={this.fnDelete} />&nbsp;            
            <br/>
            { this.state.id }<br/>
            {   this.state.name }<br/>
            {   this.state.price}<br/>
        </div>
    }

---------------------------
Hooks
https://www.w3schools.com/react/react_usestate.asp

react tutorial codevolution youtube


Redux
----------
	state management library

	npm i redux react-redux



difference between props and state:

props
	input from parent to child
	is read-only

state
	can be updated using setState(class)	 or setter 	(functional)

state management:
	ability to retain information across requests
	within a component, "state" is used

localStorage
sessionStorage


setItem(key,value)
value=getItem(key)


jwt from react

Activity:
conditional formatting for validation.
1) name length <5 means error
2) price <100 means error
3) all errors disables the button. else enable it
---------------------------------
How to use jwt in react:
-----------------------------------



eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjaGVubmEiLCJleHAiOjE2OTY4NjY3NzIsImlhdCI6MTY5NjgzMDc3Mn0.y9OmedmmNzqS5Lk8gFkVRyihEHl9tiozEYrtRFozMco




const [products, setProducts] = useState([]);

useEffect(() => {
        
        ProductService.getAllProducts().then((response) => {
            setProducts(response.data)

        })
    }, [])

-------------------
1) spring-security-jwt	(backend)
2) product		(react)


---------------------------------------------------
SonarQube
-----------------
What is sonar qube?
	code quality

1) every variable declared must be initialized
	String name="";
2) code commented out must be removed.
	only explanation should be comment
	//int i=20;		//not a valid comment.	
3) every method must have only 1 return statement
	
for ex:

	public Product read(Integer id) {
		Optional<Product> temp = pr.findById(id);
		Product p=null;
		if(temp.isPresent())
		{
			return temp.get();
		}
		return null;
	}
//the above code has multiple return statements
must be:
	public Product read(Integer id) {
		Optional<Product> temp = pr.findById(id);
		Product p=null;
		if(temp.isPresent())
		{
			p=temp.get();
		}
		return p;
	}

//the above code has only 1 return statement
A method should have only one exit point, and that should be the last statement in the methodA method should have only one exit point, and that should be the last statement in the method
4) every if condition, else, loop to have curly braces {} even if there is only 1 line

5) every java class must be inside a package. 
Default package is discouraged.

Sonarqube is used to analyze the code quality of java programs.

Lab setup:
Java jdk 11 is required

download and unzip sonarqube
go to location:
	sonarqube-8.8.0.42792\bin\windows-x86-64

run StartSonar.bat

http://localhost:9000

username & password:	admin
------------------------------------------------
1) in a maven project, we have done a coding with poor practices.
2) in localhost:9000
	we will create a project:
		Add project -> Manually
	Project key:	09-oct-sonar-1
	click setup

	token:	09-oct-sonar-1
	generate
	continue

	maven
		copy the goals

sonar:sonar -Dsonar.projectKey=09-oct-sonar-1 -Dsonar.host.url=http://localhost:9000 -Dsonar.login=1401ec1d172af2ce3012b786c6ed29f567549c1a
the above goal must be used in maven build


right click project -> Run as -> maven build (1)

goals as copies above.
Build Successful.

Now, do clean install

now, right click project, Run as -> Maven Build (2)
goal:	clean org.jacoco:jacoco-maven-plugin:prepare-agent install


before that,
in pom.xml, we add the following plugins:
put this below "dependencies" end tag:

	<build>
		<plugins>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.7.0.1746</version>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.1</version>
			</plugin>
		</plugins>
	</build>

Activity:
Identify the code quality metrics and the metrics used in sonarqube.

----------------------
Index.js
	remove that style

App.js
	we have set background image
Home.js
	should contain row 	->	cols etc
