Day 5:
Data types
	Byte.MIN_VALUE
	Byte.MAX_VALUE

Integer data types:	
	byte
	short
	int
	long

floating point numbers:
	float
	double

character type:
	char

boolean type:
	boolean

Notice that all these data types are in small letters.
Primitive data types are fundamental datatypes.	 we type in small letters.

Byte
Short
Integer
Long
Float
Double
Character
Boolean
	the above are not data types. They are types. Types means reference types.
	these are also called as "Wrapper" classes.		There are only 8 wrapper classes

Primitives are value types
Types are reference types
programming constructs


value types		
reference types



int age=20;		//int is a value type. if you go to the memory location of age you will find the 		value.

a memory is allocated of int size	

String name="Raja";
		name is created in stack (rack). But it is not possible to accommodate all the values of String type in stack.

There is another memory structure called "Heap".
Raja is stored in heap. The memory location of heap, is stored in stack.

Whenever a variable is declared inside a method. Then that variable is created in STACK.

-----------------
swap(x,y)

i=20;
j=30;

swap(i,j);
what is the value of i
what is the value of j

Challenge:
	write a method in java, that swaps two integers
-----------------------------------------------------------------------------------
Programming constructs:
	if
	if else
	if else if else
	if else if else if else

	switch case

	while loop
	do while loop
	for loop
	for each loop

/******************************************************************************

                            Online Java Compiler.
                Code, Compile, Run and Debug java program online.
Write your code in this editor and press "Run" button to execute it.

*******************************************************************************/
import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
        //accept 2 inputs from the user and display all the even numbers between those 2 numbers
        int start=sc.nextInt();
        int end=sc.nextInt();
        
        int x=start;
        
        while(x<=end)
        {
            if(x%2==0)
            {
                System.out.println(x);
            }
            x++;
        }

	}
}

//a) j is greater
//b) j is greater       i is greater



/******************************************************************************

                            Online Java Compiler.
                Code, Compile, Run and Debug java program online.
Write your code in this editor and press "Run" button to execute it.

*******************************************************************************/
import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
        //accept 2 inputs from the user and display all the even numbers between those 2 numbers
        int start=sc.nextInt();
        int end=sc.nextInt();
        
        int x=start;
        
        do
        {
            if(x%2==0)
            {
                System.out.println(x);
            }
            x++;
        }while(x<=end);

	}
}

//a) j is greater
//b) j is greater       i is greater



/******************************************************************************

                            Online Java Compiler.
                Code, Compile, Run and Debug java program online.
Write your code in this editor and press "Run" button to execute it.

*******************************************************************************/
import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
        //accept 2 inputs from the user and display all the even numbers between those 2 numbers
        int start=sc.nextInt();
        int end=sc.nextInt();
        
        for(int x=start;x<=end;x++)
        {
            if(x%2==0)
            {
                System.out.println(x);
            }
        }
        
        // int x=start;
        
        // do
        // {
        //     if(x%2==0)
        //     {
        //         System.out.println(x);
        //     }
        //     x++;
        // }while(x<=end);

	}
}

//a) j is greater
//b) j is greater       i is greater

whenever arrays or collections are used, we can use for each loop.









int arr[10];			//this is c or c++
int arr[]=new int[10];		//this is java

int arr[][]=new int[10][5];


		for(int x : arr)
		{
		    System.out.println(x);
		}

        for(int i=0;i<arr.length;i++)
        {
            System.out.println(arr[i]);
        }
--------------------------------



Pending:
Scanner methods	

Challenge:

accept the following inputs from the user and print them 
we accept rollno, name, avg marks
Sample input:
121
Raja Sivakumar
8.35
--------------
Ouput:
121
Raja Sivakumar
8.35


Sample input2:
222
Dinesh Kumar
9.4

how to get a String input?????
	next()
	nextLine()

next() 		reads only 1 word	because, any delimiter is a delimiter
	delimiters are :		space, tab, newline (enter)

nextLine()		reads entire string untile a "newline"(enter) is found

in Scanner nextX() methods, only this newLine() treats the enter key as delimiter.

next()
nextInt()
nextFloat()
nextLong()

all next methods except the nextLine() treats any delimiter as delimiter.

So, whenever we use nextLine(), it is suggested to use a different scanner for nextLine() alone
otherwise, after a newLine(), check if we read the input or not and read again.


int rollNo=0;
        String name="";
        float marks=0.0f;
        
        Scanner sc=new Scanner(System.in);
        rollNo=sc.nextInt();
        name=sc.nextLine();
        if(name.equals(""))
            name=sc.nextLine();
        marks=sc.nextFloat();
        
        System.out.println(rollNo);
        System.out.println(name);
        System.out.println(marks);

-----------------------------------another solution is to use separate Scanner for nextLine alone----
    int rollNo=0;
        String name="";
        float marks=0.0f;
        
        Scanner sc=new Scanner(System.in);
        Scanner sc2=new Scanner(System.in);
        rollNo=sc.nextInt();
        name=sc2.nextLine();
        // if(name.equals(""))
        //     name=sc.nextLine();
        marks=sc.nextFloat();
        
        System.out.println(rollNo);
        System.out.println(name);
        System.out.println(marks);
